


hero = Scene.Find("hero")

print = Game.ShowNotification
wait = Program.Wait

function pad(i) return string.format("%03d", i) end


left_arrow = ""
right_arrow = ""
down_arrow = ""
up_arrow = ""
backward_arrow = ""
forward_arrow = ""
rot_cw = ""
rot_acw = ""
scale_up = ""
scale_down = ""


-- lib/button.lua

Button = {}


function Button.New(name, text, func, args, pos, radius)

    local function button_func(args)

        local name, text, func, call_args, pos, radius =
            args[1], args[2], args[3], args[4],
            args[5] or Scene.Find("hero"):position()+Vector3.New(0,40),
            args[6] or 60

        local bubble = ShowTextBubble("_bb_"..name, pos, text)
        TextBubble.SetTouchHandlingEnabled(bubble, true)
        Touchable.SetTouchRadius(bubble, radius)

        while not TextBubble.IsTextFinished(bubble) do Program.Wait(0.05) end

        if call_args ~= nil then
            func(call_args)
        else
            func()
        end

        bubble:destroy()
    end

    Thread.New("_bb_thr", button_func, {name, text, func, args, pos, radius})

end

function Button.Menu(buttons, pos, radius)

    local function button_func(args)

        local name,    text,    func,    call_args, pos,     radius  =
              args[1], args[2], args[3], args[4],   args[5], args[6]

        local bubble = ShowTextBubble("_bb_"..name, pos, text)

        if func == nil then
            return
        end

        TextBubble.SetTouchHandlingEnabled(bubble, true)
        Touchable.SetTouchRadius(bubble, radius)

        while not TextBubble.IsTextFinished(bubble) do Program.Wait(0.05) end

        _bubble_refresh = true
        while _bubble_refresh do Program.Wait(0.05) end

        if call_args ~= nil then
            func(call_args)
        else
            func()
        end

    end



    _bubble_refresh = false
    _bubble_list = {}

    for name, details in pairs(buttons) do
        local text = details[1]
        if #text == 0 or text == nil then text = " " end
        Thread.New("_bb_thr"..name, button_func, {name, text, details[2], details[3], details[4]+pos, radius or 30})
        _bubble_list [#_bubble_list +1] = name
    end

    while not _bubble_refresh do Program.Wait(0.05) end
    _bubble_refresh = false

    
    for _, n in pairs(_bubble_list) do
        if Scene.Find("_bb_"..n.."_bubble") ~= nil then
            HideTextBubble("_bb_"..n)
        end
    end

end

-- lib/itemvars.lua

-- library for working with itemvars

IV = {}

function IV.Check(var)
    Character.AddItem(var)
    if Character.HasItem(var) then
        Character.RemoveItem(var)
        return true
    end
    return false
end

function IV.Get(var)
    if not Character.HasItem(var) then
        return 0
    end
    return Character.ItemCount(var)
end

function IV.Set(var, num)
    v = IV.Get(var)
    num = Math.Floor(num)

    if v == num then return end

    if v > num then -- subtract
        for i = 1,v-num do
            if Character.HasItem(var) then
                Character.RemoveItem(var)
            end
        end
    end

    if v < num then -- add
        for i = 1,num-v do
            Character.AddItem(var)
        end
    end
end

function IV.Inc(var)
    Character.AddItem(var)
end

function IV.Dec(var)
    if Character.HasItem(var) then
        Character.RemoveItem(var)
    end
end

function IV.Add(var, num)
    IV.Set(var,IV.Get(var)+num)
end

function IV.Sub(var, num)
    v=IV.Get(var)
    if v-num < 0 then
        IV.Set(var,0)
    else
        IV.Set(var,v-num)
    end
end

function IV.GetS(var)
    if not Character.HasItem(var) then
        return 0
    end
    v = Character.ItemCount(var)
    sign = v%2
    v = (v-sign) / 2
    if sign>0 then
        return 0-v
    end
    return v
end

function IV.SetS(var, num)
    num = Math.Floor(num)
    if num==0 then
        IV.Set(var, 0)
    end
    if num>0 then
        IV.Set(var, num*2)
    end
    if num<0 then
        IV.Set(var, (Math.Abs(num)*2)+1)
    end
end

function IV.IncS(var)
    v = IV.GetS(var)
    IV.SetS(var, v+1)
end

function IV.DecS(var)
    v = IV.GetS(var)
    if not Character.HasItem(var) then
        return
    else
        IV.SetS(var, v-1)
    end
end

function IV.AddS(var, num)
    IV.SetS(var,IV.GetS(var)+num)
end

function IV.SubS(var, num)
    v=IV.GetS(var)
    IV.SetS(var, v-num)
end


-- mason/sclplus.lua

---- Math ----


-- Powering, Rooting.
function Math.Square(n)
    return Math.Pow(n, 2)
end

function Math.Sqrt(n)
    return Math.Pow(n, 0.5)
end


function Math.Pow(n, to)
    lol = n^to
    
    lol = tostring(lol) .. " "
    
    local result = string.gsub(lol, "(%d+)%.0 ", function(a)
        return a
    end)
    
    return tonumber(result)
end

Math.Power = Math.Pow;

-- Rounding

function Math.Floor(x,y)
    y=y or 1
    return x - (x%y)
end

function Math.Ceil(x,y)
    y=y or 1
    if x%y==0 then
        return x
    else
        return (x+1)-(x%y)
    end
end


---- Threads ----


Thread = {}

function Thread.Exists(name)
    local n = "thr_"..tostring(name)
    return Scene.Find(n) ~= nil
end

function Thread.New(name, func, args)
    args = args or nil
    local name = tostring(name)
    local ident = name

    local n = 0
    while Thread.Exists(ident) do
        n = n +1
        ident = name..tostring(n)
    end

    local thr = Scene.CreateObject("threadObj", "thr_"..ident)
    if args then
        thr.args = args
    end
    thr.func = func
    thr:setAlwaysActive(true)
end

function Thread.Terminate(name)
    local name = tostring(name)
    if Scene.Find("thr_"..name) then
        local thr = Scene.Find("thr_"..name)
        thr:destroy()
        return true -- Successful termination
    else
        return false -- Unsuccessful termination
    end
end


Thread.Create = Thread.New
Async = Thread.New
Thread.Kill = Thread.Terminate


-- mason/lists.lua

type_categories = {
    "Plants",
    "Decoration",
    "Lights",
    "Fences and Pillars",
    "Buildings",
    "Items",
    "Platforms",
    "Gameplay",
    "People",
    "Plains and Forest",
    "Weapons and Misc.",
    "Florennum and Wastelands",
    "Caves and Fire",
    "Corruptors",
    "Skeletons",
    "Unused",
    "Plains",
    "Forest",
    "Caves",
    "Wasteland",
    "Snowy",
    "Grove",
    "Keep",
}
types = {
    {
        "bush",
        "tree",
        "tree2",
        "snowy_tree",
        "snowy_smalltree",
        "grove_tree1",
        "grove_tree2",
        "grove_tree3",
        "lowergrove_tree1",
        "deadtree1",
        "deadtree2",
        "grove_hang1",
        "grove_hang2",
        "grove_hang3",
        "grove_hang4",
        "grove_hang5",
    },
    {
        "pot",
        "pot_nocollision",
        "signpost",
        "signpost_blank",
        "sign_left",
        "sign_right",
        "chair",
        "table",
        "carpet",
        "bed",
        "herobed",
        "bookshelf",
        "house_wall",
        "wall_window",
        "rock1",
        "rock2",
        "smallrock1",
        "hugerock1",
        "stonepile",
        "tombstone",
        "tombstone_small",
        "fountain",
        "icicles",
        "icicles1",
        "snowy_arc",
        "whiteblock",
        "statue_holder",
        "statue_knight",
        "dragonkin_statue_scripted",
        "pressureplate_frame",
        "iapstoremodel",
        "iapstoretrigger",
    },
    {
        "torch",
        "torch_red",
        "crypt_torch",
        "gravetorch",
        "woods_torch",
        "grove_torch",
        "lowergrove_torch",
        "worldsend_torch",
        "shop_torch",
        "snowy_torch2",
        "torch_fire",
        "torchholder",
    },
    {
        "fence",
        "worldsend_pillair",
        "pillair",
        "pillair1",
        "whitepillair",
        "stonepillairs",
        "stonepillairs2",
        "stonepillairs3",
        "stonepillairs4",
        "pole1",
        "pole2",
        "polewall",
        "grove_gate",
        "grove_pole1",
        "grove_pole2",
        "board",
    },
    {
        "town_house1",
        "town_house2",
        "florennum_house1",
        "florennum_house2",
        "florennum_house3",
        "wasteland_house",
        "wasteland_ruin1",
        "wasteland_ruin2",
        "house_small",
        "house_big",
        "florennum_tower",
        "florennum_housedoor",
        "florennum_housedoor_open",
        "florennum_lock",
        "florennum_lockdoor",
        "door_bars",
        "castle_lock",
        "castle_lockdoor",
        "woodendoor",
        "house_door_open",
        "house_door",
        "woodendoor_frame",
    },
    {
        "item_brasssword",
        "item_ironsword",
        "item_broadsword",
        "item_needle",
        "item_thorn",
        "item_magicsword",
        "item_legendsword",
        "item_platearmor",
        "item_magicarmor",
        "item_firetrinket",
        "item_icetrinket",
        "item_key_yellow",
        "item_key_yellow_shop",
        "item_shadowtrinket",
        "item_healingpotion",
        "manabottle",
        "manabottle_big",
        "xp_sack",
        "sshard_blue",
        "sshard_red",
        "sshard_yellow",
        "iselon_shard_1",
        "iselon_shard_2",
        "iselon_shard_3",
        "iselon_shard_4",
        "nugget_health",
        "nugget_mana",
        "powershard",
    },
    {
        "platformwood0",
        "platformwood1",
        "swingplatform2",
        "swingplatform3",
        "swingplatform6",
        "hangingplatofm",
        "wheel1",
        "stairs_left",
        "stairs_right",
        "laituri",
        "laituri2",
        "laituri_mirror",
        "grove_platform1",
        "stonebridge",
        "web",
        "web_trampoline",
        "elevator1",
        "rotating ground",
        "whiteplatform",
        "flying_platform",
        "following_platform",
        "stomping_ground",
    },
    {
        "box",
        "keybox",
        "chest_left",
        "chest_right",
        "portal",
        "grabbable",
        "swingingaxe",
        "spikes",
        "spikes_continuous",
        "spikes_manual",
        "spikes_up",
        "ballofsnow",
        "ballofsnow_10s",
        "ballofsnow_20s_1000_07",
        "ballofsnow_20s_1500",
        "ballofsnow_5s",
        "dropping_icicle",
        "pushingblock",
    },
    {
        "npc_oldman",
        "walkingmonsteroldman",
        "king",
        "golden_knight",
        "dwarf",
        "npc_shopkeeper",
        "npc_healer",
        "npc_healer_cast",
        "npc_male1_standing",
        "npc_male_stopping_template",
        "npc_male_walking_template",
        "npc_sitting_template",
    },
    {
        "critter_konna_green",
        "grasswalker",
        "bat",
        "piikkipuska",
        "carniplant",
        "snort",
        "corrupt_snort",
        "woodblock",
        "woodknight",
        "tainted_knight",
        "woodknight_mace",
        "woodkeep_boss2",
        "piikkikonna",
        "rolling_spirit",
    },
    {
        "skeleton_lord_sword",
        "skelly_weapon_sword",
        "skeleton_sword",
        "skelly_sword",
        "dragonkin_sword",
        "dragonkin_fireball",
        "club_projectile",
        "grover_spikes",
        "spikey_spikes",
        "snart_projectile",
        "piikkikonna_spike",
        "varibandit_weapon_dagger",
        "variknight_weapon_sword",
        "varimage_magic_bolt",
        "varimage_magic_bolt_ballistic",
        "varimage_spell_cast",
        "boss_death_explosion",
        "boss_death_explosion_nodmg",
    },
    {
        "bat_blue_strike",
        "varibandit_dagger",
        "varibandit_thrower",
        "variknight_shield",
        "knight_florennum",
        "varimage",
        "varimage_red",
        "boss_dead",
        "darkbandit",
        "darkbandit_thrower",
        "grasswalker_wasteland",
        "beetle_wasteland",
        "darkbandit",
        "darkbandit_thrower",
    },
    {
        "cavelurker",
        "dire_cavelurker",
        "fire",
        "firebat",
        "firebeetle",
        "fireblock",
        "firegolem",
        "magmamonster",
        "shadowblob",
        "shadowblob_fire_little",
        "shadowblob_little",
    },
    {
        "generic_shadowform",
        "corrupted_bat",
        "corrupted_bug",
        "corrupted_skeleton",
        "dragonkin_1seeker",
        "dragonkin_fireball",
        "dragonkin_melee",
        "dragonkin_spell_cast",
        "dragonkin_sword",
    },
    {
        "corrupted_skeleton",
        "skeleton_bolt_ballistic",
        "skeleton_bolt_frost",
        "summonedSkeleton",
        "skeleton_lord",
        "skeleton_mage",
        "skeleton_mage_frost",
        "skelly_dw",
    },
    {
        "bladeblob",
        "elemental_ice",
        "monsterbush",
        "snart",
        "stonegolem",
        "kakkapiikkipy",
        "spikebouncy",
        "spikebouncy_follow",
        "spikebouncy_roam",
        "sprit",
    },
    {
        "pgm_0",
        "pgm_1",
        "pgm_2",
        "pgm_3",
        "pgm_4",
        "pgm_5",
        "pgm_6",
        "pgm_7",
        "pgm_8",
        "pgm_9",
        "pgm_10",
    },
    {
        "fgm_0",
        "fgm_1",
        "fgm_2",
        "fgm_3",
        "fgm_4",
        "fgm_5",
        "fgm_6",
        "fgm_7",
        "fgm_8",
        "fgm_9",
        "fgm_10",
    },
    {
        "cgm_0",
        "cgm_1",
        "cgm_2",
        "cgm_3",
        "cgm_4",
        "cgm_5",
        "cgm_6",
        "cgm_7",
        "cgm_8",
        "cgm_9",
        "cgm_10",
    },
    {
        "wgm_0",
        "wgm_1",
        "wgm_2",
        "wgm_3",
        "wgm_4",
        "wgm_5",
        "wgm_6",
        "wgm_7",
        "wgm_8",
        "wgm_9",
        "wgm_10",
    },
    {
        "sgm_0",
        "sgm_1",
        "sgm_2",
        "sgm_3",
        "sgm_4",
        "sgm_5",
        "sgm_6",
        "sgm_7",
        "sgm_8",
        "sgm_9",
        "sgm_10",
    },
    {
        "ggm_0",
        "ggm_1",
        "ggm_2",
        "ggm_3",
        "ggm_4",
        "ggm_5",
        "ggm_6",
        "ggm_7",
        "ggm_8",
        "ggm_9",
        "ggm_10",
    },
    {
        "kgm_0",
        "kgm_1",
        "kgm_2",
        "kgm_3",
        "kgm_4",
        "kgm_5",
        "kgm_6",
        "kgm_7",
        "kgm_8",
        "kgm_9",
        "kgm_10",
    },
}
type_names = {
    {
        "Bush",
        "Tree",
        "Tree 2",
        "Snowy Tree",
        "Snowy Smalltree",
        "Grove Tree 1",
        "Grove Tree 2",
        "Grove Tree 3",
        "Lower Grove Tree 1",
        "Dead Tree 1",
        "Dead Tree 2",
        "Grove Hang 1",
        "Grove Hang 2",
        "Grove Hang 3",
        "Grove Hang 4",
        "Grove Hang 5",
    },
    {
        "Pot",
        "Pot No Collision",
        "Sign Post",
        "Sign Post Blank",
        "Sign Left",
        "Sign Right",
        "Chair",
        "Table",
        "Carpet",
        "Bed",
        "Hero Bed",
        "Book Shelf",
        "House Wall",
        "Wall Window",
        "Rock 1",
        "Rock 2",
        "Small Rock 1",
        "Huge Rock 1",
        "Stone Pile",
        "Tombstone",
        "Tombstone Small",
        "Fountain",
        "Icicles",
        "Icicles 1",
        "Snowy Arc",
        "White Block",
        "Statue Holder",
        "Knight Statue",
        "Dragonkin Statue Scripted",
        "Pressureplate Frame",
        "Iapstore Model",
        "Iapstore Trigger",
    },
    {
        "Torch",
        "Torch Red",
        "Crypt Torch",
        "Grave Torch",
        "Woods Torch",
        "Grove Torch",
        "Lower Grove Torch",
        "Worlds End Torch",
        "Shop Torch",
        "Snowy Torch2",
        "Torch Fire",
        "Torch Holder",
    },
    {
        "Fence",
        "Worldsend Pillair",
        "Pillair",
        "Pillair 1",
        "White Pillair",
        "Stone Pillairs",
        "Stone Pillairs 2",
        "Stone Pillairs 3",
        "Stone Pillairs 4",
        "Pole 1",
        "Pole 2",
        "Pole Wall",
        "Grove Gate",
        "Grove Pole 1",
        "Grove Pole 2",
        "Board",
    },
    {
        "Town House 1",
        "Town House 2",
        "Florennum House 1",
        "Florennum House 2",
        "Florennum House 3",
        "Wasteland House",
        "Wasteland Ruin 1",
        "Wasteland Ruin 2",
        "House Small",
        "House Big",
        "Florennum Tower",
        "Florennum House Door",
        "Florennum House Door Open",
        "Florennum Lock",
        "Florennum Locked Door",
        "Door Bars",
        "Castle Lock",
        "Castle Locked Door",
        "Wooden Door",
        "House Door Open",
        "House Door",
        "Wooden Door Frame",
    },
    {
        "Brass Sword",
        "Iron Sword",
        "Broad Sword",
        "Needle",
        "Thorn",
        "Magic Sword",
        "Legend Sword",
        "Plate Armor",
        "Magic Armor",
        "Fire Trinket",
        "Ice Trinket",
        "Key Yellow",
        "Key Yellow Shop",
        "Shadow Trinket",
        "Healing Potion",
        "Mana Bottle",
        "Big Mana Bottle",
        "Xp Sack",
        "Soul Shard Blue",
        "Soul Shard Red",
        "Soul Shard Yellow",
        "Iselon Shard 1",
        "Iselon Shard 2",
        "Iselon Shard 3",
        "Iselon Shard 4",
        "Nugget Health",
        "Nugget Mana",
        "Power Shard",
    },
    {
        "Platform Wood 0",
        "Platform Wood 1",
        "Swing Platform 2",
        "Swing Platform 3",
        "Swing Platform 6",
        "Hanging Platform",
        "Wheel 1",
        "Stairs Left",
        "Stairs Right",
        "Laituri",
        "Laituri 2",
        "Laituri Mirror",
        "Grove Platform 1",
        "Stone Bridge",
        "Web",
        "Web Trampoline",
        "Elevator 1",
        "Rotating Ground",
        "White Platform",
        "Flying Platform",
        "Following Platform",
        "Stomping Ground",
    },
    {
        "Box",
        "Key Box",
        "Chest Left",
        "Chest Right",
        "Portal",
        "Grabbable",
        "Swinging Axe",
        "Spikes",
        "Spikes Continuous",
        "Spikes Manual",
        "Spikes Up",
        "Ball Of Snow",
        "Ball Of Snow 1",
        "Ball Of Snow 2",
        "Ball Of Snow 3",
        "Ball Of Snow 4",
        "Dropping Icicle",
        "Pushing Block",
    },
    {
        "NPC Old Man",
        "Walking Monster Old Man",
        "King",
        "Golden Knight",
        "Dwarf",
        "Npc Shop Keeper",
        "Npc Healer",
        "Npc Healer Cast",
        "Npc Male1 Standing",
        "Npc Male Stopping Template",
        "Npc Male Walking Template",
        "Npc Sitting Template",
    },
    {
        "Critter Konna Green",
        "Grass Walker",
        "Bat",
        "Piikkipuska",
        "Carniplant",
        "Snort",
        "Corrupt Snort",
        "Wood Block",
        "Wood Knight",
        "Tainted Knight",
        "Wood Knight Mace",
        "Wood Keep Boss 2",
        "Piikkikonna",
        "Rolling Spirit",
    },
    {
        "Skeleton Lord Sword",
        "Skelly Weapon Sword",
        "Skeleton Sword",
        "Skelly Sword",
        "Dragonkin Sword",
        "Dragonkin Fireball",
        "Club Projectile",
        "Grover Spikes",
        "Spikey Spikes",
        "Snart Projectile",
        "Piikkikonna Spike",
        "Varibandit Weapon Dagger",
        "Variknight Weapon Sword",
        "Varimage Magic Bolt",
        "Varimage Magic Bolt Ballistic",
        "Varimage Spell Cast",
        "Boss Death Explosion",
        "Boss Death Explosion Nodmg",
    },
    {
        "Bat Blue Strike",
        "Vari Bandit Dagger",
        "Vari Bandit Thrower",
        "Vari Knight Shield",
        "Knight Florennum",
        "Vari Mage",
        "Vari Mage Red",
        "Boss Dead",
        "Dark Bandit",
        "Dark Bandit Thrower",
        "Grass Walker Wasteland",
        "Beetle Wasteland",
        "Dark Bandit",
        "Dark Bandit Thrower",
    },
    {
        "Cave Lurker",
        "Dire Cave Lurker",
        "Fire",
        "Fire Bat",
        "Fire Beetle",
        "Fire Block",
        "Fire Golem",
        "Magma Monster",
        "Shadow Blob",
        "Shadow Blob Fire Little",
        "Shadow Blob Little",
    },
    {
        "Generic Shadowform",
        "Corrupted Bat",
        "Corrupted Bug",
        "Corrupted Skeleton",
        "Dragonkin 1 Seeker",
        "Dragonkin Fireball",
        "Dragonkin Melee",
        "Dragonkin Spell Cast",
        "Dragonkin Sword",
    },
    {
        "Corrupted Skeleton",
        "Skeleton Bolt Ballistic",
        "Skeleton Bolt Frost",
        "Summoned Skeleton",
        "Skeleton Lord",
        "Skeleton Mage",
        "Skeleton Mage Frost",
        "Skelly Dw",
    },
    {
        "Blade Blob",
        "Elemental Ice",
        "Monster Bush",
        "Snart",
        "Stone Golem",
        "Kakkapiikkipy",
        "Spike Bouncy",
        "Spike Bouncy Follow",
        "Spike Bouncy Roam",
        "Sprit",
    },
    {
        "Plains Ground 0",
        "Plains Ground 1",
        "Plains Ground 2",
        "Plains Ground 3",
        "Plains Ground 4",
        "Plains Ground 5",
        "Plains Ground 6",
        "Plains Ground 7",
        "Plains Ground 8",
        "Plains Ground 9",
        "Plains Ground 10",
    },
    {
        "Forest Ground 0",
        "Forest Ground 1",
        "Forest Ground 2",
        "Forest Ground 3",
        "Forest Ground 4",
        "Forest Ground 5",
        "Forest Ground 6",
        "Forest Ground 7",
        "Forest Ground 8",
        "Forest Ground 9",
        "Forest Ground 10",
    },
    {
        "Caves Ground 0",
        "Caves Ground 1",
        "Caves Ground 2",
        "Caves Ground 3",
        "Caves Ground 4",
        "Caves Ground 5",
        "Caves Ground 6",
        "Caves Ground 7",
        "Caves Ground 8",
        "Caves Ground 9",
        "Caves Ground 10",
    },
    {
        "Wasteland Ground 0",
        "Wasteland Ground 1",
        "Wasteland Ground 2",
        "Wasteland Ground 3",
        "Wasteland Ground 4",
        "Wasteland Ground 5",
        "Wasteland Ground 6",
        "Wasteland Ground 7",
        "Wasteland Ground 8",
        "Wasteland Ground 9",
        "Wasteland Ground 10",
    },
    {
        "Snowy Ground 0",
        "Snowy Ground 1",
        "Snowy Ground 2",
        "Snowy Ground 3",
        "Snowy Ground 4",
        "Snowy Ground 5",
        "Snowy Ground 6",
        "Snowy Ground 7",
        "Snowy Ground 8",
        "Snowy Ground 9",
        "Snowy Ground 10",
    },
    {
        "Grove Ground 0",
        "Grove Ground 1",
        "Grove Ground 2",
        "Grove Ground 3",
        "Grove Ground 4",
        "Grove Ground 5",
        "Grove Ground 6",
        "Grove Ground 7",
        "Grove Ground 8",
        "Grove Ground 9",
        "Grove Ground 10",
    },
    {
        "Keep Ground 0",
        "Keep Ground 1",
        "Keep Ground 2",
        "Keep Ground 3",
        "Keep Ground 4",
        "Keep Ground 5",
        "Keep Ground 6",
        "Keep Ground 7",
        "Keep Ground 8",
        "Keep Ground 9",
        "Keep Ground 10",
    },
}



area_codes = {
    ["beyond_graveyard"] ="bg",
    ["credits"] ="cr",
    ["fire_part1"] ="Fa",
    ["fire_part2"] ="Fb",
    ["fire_part3"] ="Fc",
    ["fire_part31"] ="Ff",
    ["fire_part4"] ="Fd",
    ["fire_part5"] ="Fe",
    ["fire_partBoss"] ="FB",
    ["florennum_cave1"] ="fC",
    ["florennum_healerhouse"] ="fH",
    ["florennum_jail_boss"] ="jB",
    ["florennum_jail_part1"] ="ja",
    ["florennum_jail_part2"] ="jb",
    ["florennum_part1"] ="fa",
    ["florennum_shop"] ="fS",
    ["florennum_tower1"] ="fb",
    ["florennum_tower2"] ="fc",
    ["florennum_towertop"] ="fT",
    ["florennum_wall1"] ="fW",
    ["forest_cave0"] ="ec",
    ["forest_cave1"] ="ed",
    ["forest_cave2"] ="ee",
    ["forest_cave3"] ="ef",
    ["forest_cave4"] ="eg",
    ["forest_cave5"] ="eh",
    ["forest_part1"] ="ea",
    ["forest_part2"] ="eb",
    ["grass_house"] ="kH",
    ["grass_part1"] ="ka",
    ["grass_part2"] ="kb",
    ["grass_part3"] ="kc",
    ["grove_crypt1"] ="GC",
    ["grove_graveyard"] ="GG",
    ["grove_part1"] ="Ga",
    ["grove_part2"] ="Gb",
    ["grove_sacred"] ="GS",
    ["hero"] ="he",
    ["icecastle_part1"] ="ia",
    ["icecastle_part11"] ="if",
    ["icecastle_part2"] ="ib",
    ["icecastle_part3"] ="ic",
    ["icecastle_part4"] ="id",
    ["icecastle_part5"] ="ie",
    ["icecastle_partBoss"] ="iB",
    ["lowergrove_part1"] ="GL",
    ["menu"] ="me",
    ["plains_cave0"] ="ph",
    ["plains_caveFirst"] ="pi",
    ["plains_house1"] ="pH",
    ["plains_part1"] ="pa",
    ["plains_part2"] ="pb",
    ["plains_part3"] ="pc",
    ["plains_part4"] ="pd",
    ["plains_tower1"] ="pT",
    ["plains_woodkeep"] ="pe",
    ["plains_woodkeep2"] ="pf",
    ["plains_woodkeep3"] ="pg",
    ["plains_woodkeep_cellar"] ="pC",
    ["plains_woodkeep_entrance"] ="pE",
    ["snowy_cave1"] ="se",
    ["snowy_cave2"] ="sf",
    ["snowy_part1"] ="sa",
    ["snowy_part2"] ="sb",
    ["snowy_part3"] ="sc",
    ["snowy_part4"] ="sd",
    ["thecave_crypt1"] ="Cs",
    ["thecave_crypt2"] ="Ct",
    ["thecave_part1"] ="Ca",
    ["thecave_part11"] ="Cb",
    ["thecave_part12"] ="Cc",
    ["thecave_part121"] ="Cd",
    ["thecave_part13"] ="Ce",
    ["thecave_part131"] ="Cf",
    ["thecave_part132"] ="Cg",
    ["thecave_part14"] ="Ch",
    ["thecave_part141"] ="Ci",
    ["thecave_part1411"] ="Cj",
    ["thecave_part142"] ="Ck",
    ["thecave_part1421"] ="Cl",
    ["thecave_part15"] ="Cm",
    ["thecave_part2"] ="Cn",
    ["thecave_part21"] ="Co",
    ["thecave_part22"] ="Cp",
    ["thecave_part23"] ="Cq",
    ["thecave_part24"] ="Cr",
    ["theend"] ="te",
    ["town_elderhouse"] ="ce",
    ["town_healerhouse"] ="cH",
    ["town_herohouse"] ="ch",
    ["town_part1"] ="ca",
    ["town_secrethouse"] ="cS",
    ["town_shop"] ="cs",
    ["town_woods1"] ="cF",
    ["town_woods_end"] ="cE",
    ["wasteland_cave"] ="wC",
    ["wasteland_cave1"] ="we",
    ["wasteland_cave_snowy"] ="wf",
    ["wasteland_house1"] ="wh",
    ["wasteland_part1"] ="wa",
    ["wasteland_part2"] ="wb",
    ["wasteland_part3"] ="wc",
    ["wasteland_part4"] ="wd",
    ["wasteland_town"] ="wT",
    ["wasteland_town_healerhouse"] ="wH",
    ["wasteland_town_secrethouse"] ="wS",
    ["wasteland_town_shop"] ="ws",
    ["worldsend_part1"] ="Wa",
    ["worldsend_part2"] ="Wb",
    ["worldsend_part3"] ="Wc",
    ["worldsend_part4"] ="Wd",
    ["worldsend_part5"] ="We",
    ["worldsend_part6"] ="Wf",
    ["worldsend_part7"] ="Wg",
    ["worldsend_part8"] ="Wh",
    ["worldsend_part9"] ="Wi",

}
naughty_list = {
    "skeleton_bolt_ballistic",
    "skeleton_bolt_frost",
    "box",
    "keybox",
    "pushingblock",
    --[[
    "npc_healer",
    "npc_oldman",
    "walkingmonsteroldman",
    "npc_male_stopping_template",
    "npc_male_walking_template",
    "npc_sitting_template",
    "skeleton_bolt_frost",
    "skeleton_bolt_ballistic",
    "critter_konna_green",
    "bat",
    "beetle_wasteland",
    "bladeblob",
    "corrupt_snort",
    "darkbandit",
    "darkbandit_thrower",
    "elemental_ice",
    "fire",
    "firebat",
    "firebeetle",
    "fireblock",
    "firegolem",
    "generic_shadowform",
    "grasswalker",
    "grasswalker_wasteland",
    "icedwarf",
    "knight_florennum",
    "magmamonster",
    "piikkipuska",
    "rolling_spirit",
    "shadowblob",
    "shadowblob_fire_little",
    "shadowblob_little",
    "shadowspinner",
    "skeleton_lord",
    "skeleton_mage",
    "skeleton_mage_frost",
    "skeleton_sword",
    "skelly_dw",
    "snart",
    "snort",
    "snowbug",
    "spikebouncy",
    "spikebouncy_follow",
    "spikebouncy_roam",
    "sprit",
    "stonegolem",
    "tainted_knight",
    "woodblock",
    "woodknight",
    "woodknight_mace",
    "kakkapiikkipy",
    "dimension_monster",
    "corrupted_bug",
    "corrupted_skeleton",
    "dragonkin_1seeker",
    "dragonkin_melee",
    "charging_golem",
    "bandit",
    "piikkikonna",
    "varibandit_thrower",
    "variknight_shield",
    "varimage",
    "varimage_magic_bolt",
    "varimage_red",
    "boss_dead",
    "boss_death_explosion",
    "boss_death_explosion_nodmg",
    "summonedSkeleton", ]]
    "woodkeep_boss2",
}
tele_list = {
    ["Cairnwood Village"] = {
        "town_elderhouse",
        "town_healerhouse",
        "town_herohouse",
        "town_part1",
        "town_secrethouse",
        "town_shop",
        "town_woods1",
        "town_woods_end",
    },
    ["Great Plains"] = {
        "plains_cave0",
        "plains_caveFirst",
        "plains_house1",
        "plains_part1",
        "plains_part2",
        "plains_part3",
        "plains_part4",
        "plains_tower1",
    },
    ["Forgotten Keep"] = {
        "plains_woodkeep",
        "plains_woodkeep2",
        "plains_woodkeep3",
        "plains_woodkeep_cellar",
        "plains_woodkeep_entrance",
    },
    ["Evernight Forest"] = {
        "forest_cave0",
        "forest_cave1",
        "forest_cave2",
        "forest_cave3",
        "forest_cave4",
        "forest_cave5",
        "forest_part1",
        "forest_part2",
        "beyond_graveyard",
        "grove_crypt1",
        "grove_graveyard",
        "grove_part1",
        "grove_part2",
    },
    ["Outskirt of Florennum"] = {
        "florennum_wall1",
        "grass_house",
        "grass_part1",
        "grass_part2",
        "grass_part3",
        "florennum_cave1",
    },
    ["Florennum"] = {
        "florennum_healerhouse",
        "florennum_jail_boss",
        "florennum_jail_part1",
        "florennum_jail_part2",
        "florennum_part1",
        "florennum_shop",
        "florennum_tower1",
        "florennum_tower2",
        "florennum_towertop",
    },
    ["Wastelands"] = {
        "wasteland_cave",
        "wasteland_cave1",
        "wasteland_cave_snowy",
        "wasteland_house1",
        "wasteland_part1",
        "wasteland_part2",
        "wasteland_part3",
        "wasteland_part4",
        "wasteland_town",
        "wasteland_town_healerhouse",
        "wasteland_town_secrethouse",
        "wasteland_town_shop",
    },
    ["Great Caves"] = {
        "thecave_crypt1",
        "thecave_crypt2",
        "thecave_part1",
        "thecave_part2",
        "thecave_part11",
        "thecave_part12",
        "thecave_part13",
        "thecave_part14",
        "thecave_part15",
        "thecave_part21",
        "thecave_part22",
        "thecave_part23",
        "thecave_part24",
        "thecave_part121",
        "thecave_part131",
        "thecave_part132",
        "thecave_part141",
        "thecave_part142",
        "thecave_part1411",
        "thecave_part1421",
    },
    ["Fiery Depths"] = {
        "fire_part1",
        "fire_part2",
        "fire_part3",
        "fire_part4",
        "fire_part5",
        "fire_part31",
        "fire_partBoss",
    },
    ["Snowy Slopes"] = {
        "snowy_cave1",
        "snowy_cave2",
        "snowy_part1",
        "snowy_part2",
        "snowy_part3",
        "snowy_part4",
    },
    ["Frozen Temple"] = {
        "icecastle_part1",
        "icecastle_part2",
        "icecastle_part3",
        "icecastle_part4",
        "icecastle_part5",
        "icecastle_part11",
        "icecastle_partBoss",
    },
    ["World's End Keep"] = {
        "lowergrove_part1",
        "worldsend_part1",
        "worldsend_part2",
        "worldsend_part3",
        "worldsend_part4",
        "worldsend_part5",
        "worldsend_part6",
        "worldsend_part7",
        "worldsend_part8",
        "worldsend_part9",
    },
}
scene_names = {
    ["beyond_graveyard.scene"] = "Purplemoor Graveyard",
    ["credits.scene"] = "Credits",
    ["fire_part1.scene"] = "Fiery Depths 1",
    ["fire_part2.scene"] = "Fiery Depths 2",
    ["fire_part3.scene"] = "Fiery Depths 3",
    ["fire_part31.scene"] = "Fiery Depths 4",
    ["fire_part4.scene"] = "Fiery Depths 5",
    ["fire_part5.scene"] = "Fiery Depths 6",
    ["fire_partBoss.scene"] = "Fiery Depths Boss",
    ["florennum_cave1.scene"] = "Sewers",
    ["florennum_healerhouse.scene"] = "Florennum Healer",
    ["florennum_jail_boss.scene"] = "Florennum Boss",
    ["florennum_jail_part1.scene"] = "Florennum Dungeon 1",
    ["florennum_jail_part2.scene"] = "Florennum Dungeon 2",
    ["florennum_part1.scene"] = "Florennum",
    ["florennum_shop.scene"] = "Florennum Shop",
    ["florennum_tower1.scene"] = "Eastern Guard Tower",
    ["florennum_tower2.scene"] = "Western Guard Tower",
    ["florennum_towertop.scene"] = "Eastern Tower Top",
    ["florennum_wall1.scene"] = "Florennum Wall",
    ["forest_cave0.scene"] = "Cairnwood Valley Caves",
    ["forest_cave1.scene"] = "Sinister Cave",
    ["forest_cave2.scene"] = "Evernight Caves 1",
    ["forest_cave3.scene"] = "Evernight Caves 2",
    ["forest_cave4.scene"] = "Evernight Caves 3",
    ["forest_cave5.scene"] = "Evernight Caves 4",
    ["forest_part1.scene"] = "Evernight Forest 1",
    ["forest_part2.scene"] = "Evernight Forest 2",
    ["grass_house.scene"] = "Unknown House",
    ["grass_part1.scene"] = "Great Plains 1",
    ["grass_part2.scene"] = "Great Plains 2",
    ["grass_part3.scene"] = "Great Plains 3",
    ["grove_crypt1.scene"] = "Corrupted Crypt",
    ["grove_graveyard.scene"] = "Wellcliff Graveyard",
    ["grove_part1.scene"] = "Evernight Forest 3",
    ["grove_part2.scene"] = "Wellcliff Campsite",
    ["grove_sacred.scene"] = "Selma's Gravesite",
    ["icecastle_part1.scene"] = "Frozen Temple 1",
    ["icecastle_part11.scene"] = "Frozen Temple 2",
    ["icecastle_part2.scene"] = "Frozen Temple 3",
    ["icecastle_part3.scene"] = "Frozen Temple 4",
    ["icecastle_part4.scene"] = "Frozen Temple 5",
    ["icecastle_part5.scene"] = "Hall of Trials",
    ["icecastle_partBoss.scene"] = "Hall of the Dwarven King",
    ["lowergrove_part1.scene"] = "Corrupted Grove",
    ["menu.scene"] = "Main Menu",
    ["plains_cave0.scene"] = "MarbleMist Cave",
    ["plains_caveFirst.scene"] = "Murky Small Cave",
    ["plains_house1.scene"] = "Ferryman's house",
    ["plains_part1.scene"] = "Great Plains 1",
    ["plains_part2.scene"] = "Great Plains 2",
    ["plains_part3.scene"] = "Great Plains 3",
    ["plains_part4.scene"] = "Great Plains 4",
    ["plains_tower1.scene"] = "Abandoned Guard Tower",
    ["plains_woodkeep.scene"] = "Forgotten Keep 1",
    ["plains_woodkeep2.scene"] = "Forgotten Keep 1",
    ["plains_woodkeep3.scene"] = "Forgotten Keep 1",
    ["plains_woodkeep_cellar.scene"] = "Forgotten Keep Cellar",
    ["plains_woodkeep_entrance.scene"] = "Great Plains 5",
    ["snowy_cave1.scene"] = "Snowy Slopes Cave",
    ["snowy_cave2.scene"] = "Infested Gold Mine",
    ["snowy_part1.scene"] = "Snowy Slopes 1",
    ["snowy_part2.scene"] = "Snowy Slopes 2",
    ["snowy_part3.scene"] = "Snowy Slopes 3",
    ["snowy_part4.scene"] = "Snowy Slopes 4",
    ["thecave_crypt1.scene"] = "Purplemoor Crypt 1",
    ["thecave_crypt2.scene"] = "Purplemoor Crypt 2",
    ["thecave_part1.scene"] = "Great Caves 1",
    ["thecave_part11.scene"] = "Great Caves 2",
    ["thecave_part12.scene"] = "Great Caves 3",
    ["thecave_part121.scene"] = "Great Caves 4",
    ["thecave_part13.scene"] = "Great Caves 5",
    ["thecave_part131.scene"] = "Great Caves 6",
    ["thecave_part132.scene"] = "Great Caves 7",
    ["thecave_part14.scene"] = "Great Caves 8",
    ["thecave_part141.scene"] = "Great Caves 9",
    ["thecave_part1411.scene"] = "Great Caves 10",
    ["thecave_part142.scene"] = "Great Caves 11",
    ["thecave_part1421.scene"] = "Great Caves 12",
    ["thecave_part15.scene"] = "Chambers of Power",
    ["thecave_part2.scene"] = "Great Caves 13",
    ["thecave_part21.scene"] = "Great Caves 14",
    ["thecave_part22.scene"] = "Great Caves 15",
    ["thecave_part23.scene"] = "Great Caves 16",
    ["thecave_part24.scene"] = "Great Caves 17",
    ["theend.scene"] = "Credits",
    ["town_elderhouse.scene"] = "Elder's House",
    ["town_healerhouse.scene"] = "Cairnwood Healer",
    ["town_herohouse.scene"] = "Hero's House",
    ["town_part1.scene"] = "Cairnwood Village",
    ["town_secrethouse.scene"] = "Dusty Hut",
    ["town_shop.scene"] = "Cairnwood Shop",
    ["town_woods1.scene"] = "Cairnwood Forest",
    ["town_woods_end.scene"] = "Cairnwood Forest End",
    ["wasteland_cave.scene"] = "Greyhedge Caves",
    ["wasteland_cave1.scene"] = "Huge Cavern",
    ["wasteland_cave_snowy.scene"] = "Icy Cave",
    ["wasteland_house1.scene"] = "Thieve's Hideout",
    ["wasteland_part1.scene"] = "Wastelands 1",
    ["wasteland_part2.scene"] = "Wastelands 2",
    ["wasteland_part3.scene"] = "Greyhedge Crossing",
    ["wasteland_part4.scene"] = "Wastelands 3",
    ["wasteland_town.scene"] = "Greyhedge Village",
    ["wasteland_town_healerhouse.scene"] = "Greyhedge Healer",
    ["wasteland_town_secrethouse.scene"] = "Greyhedge Healer",
    ["wasteland_town_shop.scene"] = "A Mysterious House",
    ["worldsend_part1.scene"] = "Worlds End Keep 1",
    ["worldsend_part2.scene"] = "Worlds End Keep 2",
    ["worldsend_part3.scene"] = "Worlds End Keep 3",
    ["worldsend_part4.scene"] = "Worlds End Keep 4",
    ["worldsend_part5.scene"] = "Worlds End Keep 5",
    ["worldsend_part6.scene"] = "Worlds End Keep 6",
    ["worldsend_part7.scene"] = "Worlds End Keep 7",
    ["worldsend_part8.scene"] = "Worlds End Keep 8",
    ["worldsend_part9.scene"] = "Lair of Death",
}
section_carousel_offsets = {0, -50, -100}
section_carousel_sizes   = {
    0.4,
    0.4,
    0.4,
    0.4,
    0.4,
    0.4,
    0.4,
    0.4,
    0.4,
    0.4,
    0.4,
    0.4,
    0.4,
    0.4,
    0.4,
    0.4,
    0.4,
    0.4,
    0.4,
    0.4,
    0.4,
    0.4,
    0.4,
}

-- mason/finder.lua

function finder()

    local function up() finder_center = finder_center + Vector3.New(  0, finder_steps[finder_level]) end
    local function dn() finder_center = finder_center + Vector3.New(  0,-finder_steps[finder_level]) end
    local function lf() finder_center = finder_center + Vector3.New(-finder_steps[finder_level],  0) end
    local function rt() finder_center = finder_center + Vector3.New( finder_steps[finder_level],  0) end

    local function z1() finder_level = 1 end
    local function z2() finder_level = 2 end
    local function z3() finder_level = 3 end

    local function delete(i)

        local name = pad(i)
        local obj = Scene.Find(name)

        if obj ~= nil then

            obj:destroy()

            if i == load_count then
                IV.Set(load_code..pad(i).."t", 0)
                load_count = load_count -1
            else
                for j = i, load_count do
                    suffixes = {"t", "x", "y", "z", "r", "s", "o"}
                    for _,v in ipairs(suffixes) do
                        IV.Set(
                            load_code..pad(j)..v,
                            IV.Get(load_code..pad(j+1)..v)
                        )
                    end
                end
            end

            load()

        end

    end

    local function back()
        finder_exit = true
        mason_menu()
    end
    local function exit()
        finder_exit = true
        Game.SetCinematicMode(false, true)
        Camera.ResetFocus()
        mason_busy = false
    end

    local function inrange(v1, v2, radius)
        a=Math.Abs
        return
        a(v1:x() - v2:x()) < radius
        and
        a(v1:y() - v2:y()) < radius
    end


    if IV.Get(load_code.."001t") == 0 then
        exit()
        Game.ShowNotification("all objects deleted")
    end

    if Scene.Find("mason_focus") == nil then
        finder_focus = Scene.CreateObject("mason_focus", "mason_focus")
    end

    finder_center = hero:position()+Vector3.New(0, 40)
    finder_exit = false
    finder_steps = {30, 60, 120}
    finder_zooms = {110, 220, 440}
    finder_level = 2


    while not finder_exit do

        if IV.Get(load_code.."001t") == 0 then
            exit()
            Game.ShowNotification("all objects deleted")
        end

        finder_focus:setPosition(finder_center)
        local z = finder_zooms[finder_level]
        Camera.FocusAtShape(finder_focus, Rectangle.New(z,z,z,z))
        if not smooth_camera then Camera.JumpToFocus() end

        local buttons = {

            {
                ["up"] = {up_arrow,       up,   nil, Vector3.New( 160,-100)},
                ["dn"] = {down_arrow,     dn,   nil, Vector3.New( 200,-100)},
                ["lf"] = {left_arrow,     lf,   nil, Vector3.New( 160, -65)},
                ["rt"] = {right_arrow,    rt,   nil, Vector3.New( 200, -65)},
                ["z1"] = {"+",            z1,   nil, Vector3.New( 200,  40)},
                ["z2"] = {"0",            z2,   nil, Vector3.New( 200,   5)},
                ["z3"] = {"-",            z3,   nil, Vector3.New( 200, -30)},

                ["back"] = {"Back",       back, nil, Vector3.New( -190, -65)},
                ["exit"] = {"X",          exit, nil, Vector3.New( -190,-100)},
            },
            {
                ["up"] = {up_arrow,       up,   nil, Vector3.New( 320,-200)},
                ["dn"] = {down_arrow,     dn,   nil, Vector3.New( 400,-200)},
                ["lf"] = {left_arrow,     lf,   nil, Vector3.New( 320,-130)},
                ["rt"] = {right_arrow,    rt,   nil, Vector3.New( 400,-130)},
                ["z1"] = {"+",            z1,   nil, Vector3.New( 400,  80)},
                ["z2"] = {"0",            z2,   nil, Vector3.New( 400,  10)},
                ["z3"] = {"-",            z3,   nil, Vector3.New( 400, -60)},

                ["back"] = {"Back",       back, nil, Vector3.New( -380,-130)},
                ["exit"] = {"X",          exit, nil, Vector3.New( -380,-200)},
            },
            {
                ["up"] = {up_arrow,       up,   nil, Vector3.New( 640,-400)},
                ["dn"] = {down_arrow,     dn,   nil, Vector3.New( 800,-400)},
                ["lf"] = {left_arrow,     lf,   nil, Vector3.New( 640,-260)},
                ["rt"] = {right_arrow,    rt,   nil, Vector3.New( 800,-260)},
                ["z1"] = {"+",            z1,   nil, Vector3.New( 800, 160)},
                ["z2"] = {"0",            z2,   nil, Vector3.New( 800,  20)},
                ["z3"] = {"-",            z3,   nil, Vector3.New( 800,-120)},

                ["back"] = {"Back",       back, nil, Vector3.New( -760,-260)},
                ["exit"] = {"X",          exit, nil, Vector3.New( -760,-400)},
            },

        }

        for i = 1,load_count do
            local name = pad(i)
            local ivn = load_code..name
            local type_num = IV.Get(ivn.."t")
            local type = types[(type_num - (type_num%100))/100][type_num%100]
            local obj = Scene.Find(name)
            if obj ~= nil and inrange(obj:position(), finder_center+Vector3.New(0,-50), finder_zooms[finder_level]) then
                local x = obj:position():x()
                local y = obj:position():y()
                local z = obj:position():z()
                local r = obj:rotation()
                local s = obj:scaling()
                local str = name.." : "..type.."\n"
                str = str..x.."/"..y.."/"..z.."\n"
                str = str..r.."/"..s
                buttons[finder_level]["del"..i] = {str,delete,i,obj:position() - finder_center}
            end
        end

        Program.Wait(0.05)
        Button.Menu(buttons[finder_level], finder_center, 30)
        Program.Wait(0.05)

    end

end

-- mason/manifest.lua

function manifest()

    local obj_table = ""

    for i = 1, load_count do

        local n = pad(i)
        local ivn = load_code..n

        local t = IV.Get (ivn.."t")
        local x = IV.GetS(ivn.."x")
        local y = IV.GetS(ivn.."y")
        local z = IV.GetS(ivn.."z")
        local r = IV.GetS(ivn.."r")
        local s = IV.GetS(ivn.."s")
        local o = IV.Get (ivn.."o")
        
        local obj_str = types[Math.Floor(t, 100) / 100][t%100].."/"..x.."/"..y.."/"..z.."/"..r.."/"..s.."/"..o
        if obj_table ~= "" then obj_table = obj_table.."\n" end
        obj_table = obj_table..obj_str
    end

    ShowTextBubble("manifest_disp", menu_pos+Vector3.New(0,-200), obj_table)
    ShowTextBubble("manifest_count", menu_pos+Vector3.New(-380, 80), tostring(load_count))

    Button.Menu({["back"] = {"Back", mason_menu, nil, Vector3.New(-380, -120)}}, menu_pos, 50)
    HideTextBubble("manifest_disp")
    HideTextBubble("manifest_count")


end

-- mason/teleporter.lua

local function teleporter()

    local function next_zone()
        tele_zone = tele_zone +1
        if tele_zone == 13 then
            tele_zone = 1
        end
        tele_angle = tele_angle +30
        tele_page = 0
    end
    local function prev_zone()
        tele_zone = tele_zone -1
        if tele_zone == 0 then
            tele_zone = 12
        end
        tele_angle = tele_angle -30
        tele_page = 0
    end
    local function next_page()
        if (tele_page+1) *5 < #tele_list[tele_regions[tele_zone][1]] then
            tele_page = tele_page +1
        end
    end
    local function prev_page()
        if tele_page > 0 then
            tele_page = tele_page -1
        end
    end
    local function max(n, max)
        if n > max then
            return max
        end
        return n
    end

    local function teleport(scene)
        Game.EnterPortal(scene, "spawn_default")
    end

    local function back()
        for _, set in pairs(tele_regions) do
            if Scene.Find(set[2]) ~= nil then Scene.Find(set[2]):destroy() end
            if Scene.Find(set[2].."o") ~= nil then Scene.Find(set[2].."o"):destroy() end
        end
        tele_exit = true
        mason_menu()
    end
    local function exit()
        for _, set in pairs(tele_regions) do
            if Scene.Find(set[2]) ~= nil then Scene.Find(set[2]):destroy() end
            if Scene.Find(set[2].."o") ~= nil then Scene.Find(set[2].."o"):destroy() end
        end
        tele_exit = true
        Game.SetCinematicMode(false, true)
        Camera.ResetFocus()
        mason_busy = false
    end

    tele_regions = {
        {"Cairnwood Village",     "tpgm_1", "statue_knight",             2, 25,  1},
        {"Great Plains",          "tpgm_2", "bush",                     -1, -1,0.7},
        {"Forgotten Keep",        "tpgm_3", "item_key_yellow",           0, 10,  1},
        {"Evernight Forest",      "tpgm_4", "tombstone_small",           2, -2,0.7},
        {"Outskirt of Florennum", "tpgm_5", "golden_knight",            -1, 35,  1},
        {"Florennum",             "tpgm_6", "torch",                     0, 20,1.1},
        {"Wastelands",            "tpgm_7", "statue_shieldknight",      -2, -5,  1},
        {"Great Caves",           "tpgm_8", "chest_right",               0, 12,0.7},
        {"Fiery Depths",          "tpgm_9", "dragonkin_statue_scripted", 2,  0,  1},
        {"Snowy Slopes",          "tpgm_10","goldboulder",               0,  7,0.8},
        {"Frozen Temple",         "tpgm_11","sign_dimensional",          3,  0,  1},
        {"World's End Keep",      "tpgm_12","grabbable",                 0, 10,0.5},
    }

    local center = menu_pos+Vector3.New(-600, -180)

    tele_zone = 1
    tele_exit = false
    tele_angle = 30
    tele_page = 0

    while not tele_exit do

        local buttons = {
            ["back"] = {"Back",                      back,      nil,  Vector3.New(-380,  -130)},
            ["exit"] = {"X",                         exit,      nil,  Vector3.New(-380,  -200)},
                                                                                        
            ["nzon"] = {right_arrow,                 next_zone, nil,  Vector3.New(-100,  -180)},
            ["pzon"] = {left_arrow,                  prev_zone, nil,  Vector3.New(-280,  -180)},
            ["dzon"] = {tele_regions[tele_zone][1],  nil,       nil,  Vector3.New(-180,    80)},
            ["npge"] = {right_arrow,                 next_page, nil,  Vector3.New(400,   -180)},
            ["ppge"] = {left_arrow,                  prev_page, nil,  Vector3.New(400,   -100)},
        }
        local scenes = tele_list[tele_regions[tele_zone][1]]
        for i = (tele_page*5), 4+(tele_page*5) do
            local text = scenes[i] or ""
            local text2 = scene_names[text] or ""
            buttons[#buttons+1] = {text, teleport, text, Vector3.New(240, ((i%5)*70) -180)}
        end

        local angle = tele_angle

        for index,set in pairs(tele_regions) do
            local gm = Scene.Find(set[2])
            local offset = Vector3.FromAngle(angle) * 380
            if gm == nil then
                gm = Scene.CreateObject(set[2], set[2])
                gm:setAlwaysActive(true)
                gm:setPosition(center+offset+Vector3.New(0,0,150))
                gm:setRotation(angle - 90)
                gm:setScaling(0.6)
            else
                TransformController.TranslateTo(gm, center+offset+Vector3.New(0,0,150), 0.5)
                TransformController.RotateTo(gm, angle-90, 0.5)
            end

            local gmo = Scene.Find(set[2].."o")
            local offset = Vector3.FromAngle(angle+set[4]) * (410+set[5])
            if gmo == nil then
                gmo = Scene.CreateObject(set[3], set[2].."o")
                gmo:setAlwaysActive(true)
                gmo:setPosition(center+offset+Vector3.New(0,0,150))
                gmo:setRotation(angle - 90)
                gmo:setScaling(set[6])
                Thread.New("phys_dis", disable_physics, gmo)
            else
                TransformController.TranslateTo(gmo, center+offset+Vector3.New(0,0,150), 0.5)
                TransformController.RotateTo(gmo, angle-90, 0.5)
            end

            angle = angle - 30
        end

        Program.Wait(0.02)
        Button.Menu(buttons, menu_pos, 20)
        Program.Wait(0.02)

    end

end

-- mason/settings.lua

function settings()

    local function back()
        sett_exit = true
        mason_menu()
    end
    local function exit()
        sett_exit = true
        Game.SetCinematicMode(false, true)
        Camera.ResetFocus()
        mason_busy = false
    end

    local function t_smca()
        local name = "maset_smooth_camera"
        if Character.HasItem(name) then
            Character.RemoveItem(name)
            smooth_camera = false
        else
            Character.AddItem(name)
            smooth_camera = true
        end
    end
    local function t_mcna()
        local name = "maset_use_machine_names"
        if Character.HasItem(name) then
            Character.RemoveItem(name)
            use_machine_names = false
        else
            Character.AddItem(name)
            use_machine_names = true
        end
    end
    local function t_trds()
        local name = "maset_trigger_disabled"
        if Character.HasItem(name) then
            Character.RemoveItem(name)
        else
            Character.AddItem(name)
        end
    end
    local function t_sfx()
        local name = "maset_sound_effects"
        if Character.HasItem(name) then
            Character.RemoveItem(name)
        else
            Character.AddItem(name)
        end
    end

    local function check(name)
        if Character.HasItem(name) then
            return "On"
        else
            return "Off"
        end
    end

    sett_exit = false

    while not sett_exit do

        local buttons = {
            ["back"]   = {"Back",          back,   nil, Vector3.New(-380, -130)},
            ["exit"]   = {"X",             exit,   nil, Vector3.New(-380, -200)},

            ["t_smca"] = {"Smooth Camera", t_smca, nil, Vector3.New(-220,   70)},
            ["t_mcna"] = {"Machine Names", t_mcna, nil, Vector3.New(-220,  -10)},
            ["t_trds"] = {"Disable Mason", t_trds, nil, Vector3.New(-220,  -90)},
            ["t_sfx" ] = {"Sound Effects", t_sfx,  nil, Vector3.New(-220, -170)},

            ["disp_smca"] = {check("maset_smooth_camera"),     nil, nil, Vector3.New(-80,   70)},
            ["disp_mcna"] = {check("maset_use_machine_names"), nil, nil, Vector3.New(-80,  -10)},
            ["disp_trds"] = {check("maset_trigger_disabled"),  nil, nil, Vector3.New(-80,  -90)},
            ["disp_sfx" ] = {check("maset_sound_effects"),     nil, nil, Vector3.New(-80, -170)},

            ["info_smca"] = {"Use a Smooth Camera Effect in Finder and Add menus", nil, nil, Vector3.New(120,   70)},
            ["info_mcna"] = {"Display correct names in Type Selector",              nil, nil, Vector3.New(120,  -10)},
            ["info_trds"] = {"Re-enable at the hero's house",                       nil, nil, Vector3.New(120,  -90)},
            ["info_sfx" ] = {"Use sound effects for adding objects",                nil, nil, Vector3.New(120, -170)},
        }

        Program.Wait(0.05)
        Button.Menu(buttons, menu_pos, 30)
        Program.Wait(0.01)

    end

end

-- mason/type_select.lua

function type_select(category)

    if category == 1 then
        type_list_min = 1
        type_list_max = 8
    elseif category == 2 then
        type_list_min = 9
        type_list_max = 16
    elseif category == 3 then
        type_list_min = 17
        type_list_max = 23
    end

    type_list = type_list_min
    type_num = 1


    local function next_list()
        if type_list < type_list_max then
            type_list = type_list +1
        else
            type_list = type_list_min
        end
        type_num = 1
    end
    local function prev_list()
        if type_list > type_list_min then
            type_list = type_list -1
        else
            type_list = type_list_max
        end
        type_num = 1
    end

    local function HoldPlaceIfNaughty(type, name)
        local type_is_naughty = false
        for k,v in pairs(naughty_list) do
            if v == type then
                type_is_naughty = true
            end
        end

        local obj
        if type_is_naughty then
            obj = Scene.CreateObject("powershard", name)
        else
            obj = Scene.CreateObject(type, name)
        end
        return obj
    end


    local function next_num()
        type_num = type_num +1
        if type_num > #types[type_list] then
            type_num = 1
        end
    end
    local function prev_num()
        if type_num > 1 then
            type_num = type_num -1
        else
            type_num = #types[type_list]
        end
    end

    local function select()
        type_exit = true
        add_menu(types[type_list][type_num], (type_list * 100) + type_num)
    end
    local function back()
        type_exit = true
        mason_menu()
    end
    local function exit()
        type_exit = true
        Game.SetCinematicMode(false, true)
        Camera.ResetFocus()
        mason_busy = false
    end

    type_exit = false

    while not type_exit do

        local type_display = type_names[type_list][type_num]
        if use_machine_names then
            type_display = types[type_list][type_num]
        end

        local buttons = {

            ["pl"] = {left_arrow, prev_list, nil, Vector3.New( 160,  70)},
            ["nl"] = {right_arrow,next_list, nil, Vector3.New( 260,  70)},
            ["pn"] = {left_arrow, prev_num,  nil, Vector3.New( 160,-120)},
            ["nn"] = {right_arrow,next_num,  nil, Vector3.New( 260,-120)},

            ["sel" ] = {"Select", select,    nil, Vector3.New( 380, -25)},
            ["back"] = {"Back",   back,      nil, Vector3.New(-380,-130)},
            ["exit"] = {"X",      exit,      nil, Vector3.New(-380,-200)},


            ["list"] = {type_categories[type_list], nil, nil, Vector3.New(-250,  70)},
            ["type"] = {type_display,               nil, nil, Vector3.New(-250,-120)},

        }
        --[[
        -- fill the section carousel
        for i = type_list_min, type_list_max do
            if Scene.Find("scar_"..i) == nil then
                local carobj = HoldPlaceIfNaughty(types[i][1],"scar_"..i)
                CollisionShape.DisableAll(carobj)
                Thread.New("phys_dis", disable_physics, carobj)
                carobj:setPosition(menu_pos + Vector3.New(-200 + (i*20) - section_carousel_offsets[category], 100))
                carobj:setScaling(section_carousel_sizes[i])
            end
        end
        ]]

        -- make the placeholder
        typeph = HoldPlaceIfNaughty(types[type_list][type_num], "typeph")
        CollisionShape.DisableAll(typeph)
        Thread.New("phys_dis", disable_physics, typeph)
        Thread.New("", function(entity) Entity.SetPhysicsEnabled(entity, false) end, typeph)
        typeph:setPosition(menu_pos + Vector3.New(0, -30))
        typeph:setScaling(0.75)

        Button.Menu(buttons, menu_pos, 50)
        typeph:destroy()
        Program.Wait(0.1)
    end



end

-- mason/add.lua

function add_menu(type, type_num)

    if type_is_naughty then
        addph = Scene.CreateObject("powershard", "addph")
    else
        addph = Scene.CreateObject(types[Math.Floor(type_num, 100) / 100][type_num%100], "addph")
    end
    addph:setPosition(menu_pos)
    CollisionShape.DisableAll(addph)
    Thread.New("phys_dis", disable_physics, addph)
    Thread.New("", function(entity) Entity.SetPhysicsEnabled(entity, false) end, addph)


    local function up() menu_pos = menu_pos + Vector3.New(0, 5^step) end
    local function dn() menu_pos = menu_pos + Vector3.New(0,-5^step) end
    local function lt() menu_pos = menu_pos + Vector3.New(-5^step) end
    local function rt() menu_pos = menu_pos + Vector3.New( 5^step) end
    local function fd() menu_pos = menu_pos + Vector3.New(0,0, 5^step) end
    local function bd() menu_pos = menu_pos + Vector3.New(0,0,-5^step) end

    local function cw() addph:setRotation(addph:rotation()+(-5^step)) end
    local function aw() addph:setRotation(addph:rotation()+( 5^step)) end

    local function br() addph:setScaling(addph:scaling()+( 5^step)/25) end
    local function sr() addph:setScaling(addph:scaling()+(-5^step)/25) end


    local function jl() if new_obj ~= nil then addph:setPosition(new_obj:position()) end end
    local function rs() addph:setScaling(1) addph:setRotation(0) end

    local function stepup() if step < 5 then step = step +1 end end
    local function stepdn() if step > 0 then step = step -1 end end
    local function steprs() step = 2 end

    local function more() add_screen = 2 end
    local function main() add_screen = 1 end

    local function coll_toggle() add_coll = not add_coll end
    local function phys_toggle() add_phys = not add_phys end
    local function actv_toggle() add_actv = not add_actv end


    local function place()
        load_count = load_count +1
        n = pad(load_count)
        ivn = load_code..n

        new_obj = Scene.CreateObject(types[Math.Floor(type_num, 100) / 100][type_num%100], ""..n)
        new_obj:setPosition(menu_pos)
        new_obj:setRotation(addph:rotation())
        new_obj:setScaling (addph:scaling ())

        if not add_phys then Thread.New("phys_dis", disable_physics, new_obj) end
        if not add_coll then CollisionShape.DisableAll(new_obj) end
        if     add_actv then new_obj:setAllwaysActive(true) end

        local set = 0
        if add_coll then set = set +1 end
        if add_phys then set = set +2 end
        if add_actv then set = set +4 end

        IV.Set (ivn.."t", type_num)
        IV.SetS(ivn.."x", new_obj:position():x())
        IV.SetS(ivn.."y", new_obj:position():y())
        IV.SetS(ivn.."z", new_obj:position():z())
        IV.SetS(ivn.."r", new_obj:rotation())
        IV.SetS(ivn.."s", new_obj:scaling ())
        IV.Set (ivn.."o", set)
    end

    local function back()
        add_exit = true
        addph:destroy()
        mason_menu()
    end

    local function exit()
        add_exit = true
        addph:destroy()
        Game.SetCinematicMode(false, true)
        Camera.ResetFocus()
        mason_busy = false
    end

    step = 2
    add_exit = false
    add_coll = true
    add_phys = true
    add_actv = false
    add_screen = 1

    while not add_exit do

        coords_string = 
            "x:"..Math.Floor(addph:position():x(), 0.1).."\n"..
            "y:"..Math.Floor(addph:position():y(), 0.1).."\n"..
            "z:"..Math.Floor(addph:position():z(), 0.1)

        rotscale_string =
            "r:"..Math.Floor(addph:rotation(), 0.1 ).."\n"..
            "s:"..Math.Floor(addph:scaling (), 0.01)


        if add_screen == 1 then
            add_buttons = {

                ["up"] = {up_arrow,       up, nil, Vector3.New( 320,-200)},
                ["dn"] = {down_arrow,     dn, nil, Vector3.New( 400,-200)},
                ["lt"] = {left_arrow,     lt, nil, Vector3.New( 320,-130)},
                ["rt"] = {right_arrow,    rt, nil, Vector3.New( 400,-130)},
                ["fd"] = {forward_arrow,  fd, nil, Vector3.New( 320, -60)},
                ["bd"] = {backward_arrow, bd, nil, Vector3.New( 400, -60)},

                ["cw"] = {rot_cw,         cw, nil, Vector3.New( 400,  40)},
                ["aw"] = {rot_acw,        aw, nil, Vector3.New( 320,  40)},
                ["br"] = {scale_up,       br, nil, Vector3.New( 400, 100)},
                ["sr"] = {scale_down,     sr, nil, Vector3.New( 320, 100)},

                ["su"] = {"+",     stepup,    nil, Vector3.New( -40,  90)},
                ["sd"] = {"-",     stepdn,    nil, Vector3.New(-120,  90)},
                ["mo"] = {"more",  more,      nil, Vector3.New(  40,  90)},
                ["pl"] = {"Place", place,     nil, Vector3.New(-400, -10)},
                ["bk"] = {"Back",  back,      nil, Vector3.New(-400,-130)},
                ["ex"] = {"X",     exit,      nil, Vector3.New(-400,-200)},

                ["step"]   = {step.." Step", steprs, nil, Vector3.New(-200,  90)},
                ["coords"] = {coords_string, jl,     nil, Vector3.New(-300,  50)},
                ["locrot"] = {rotscale_string, rs,   nil, Vector3.New(-400,  75)},
            }
        elseif add_screen == 2 then
            add_buttons = {
                ["colld"] = {tostring(add_coll),     nil,         nil, Vector3.New( 150,  50)},
                ["physd"] = {tostring(add_phys),     nil,         nil, Vector3.New( 150, -20)},
                ["actvd"] = {tostring(add_actv),     nil,         nil, Vector3.New( 150, -90)},
                ["coll"] = {"Toggle Collisions    ", coll_toggle, nil, Vector3.New( 350,  50)},
                ["phys"] = {"Toggle Physics       ", phys_toggle, nil, Vector3.New( 350, -20)},
                ["actv"] = {"Toggle Allways Active", actv_toggle, nil, Vector3.New( 350, -90)},
                ["back"] = {"Back",                  main,        nil, Vector3.New(-400, -50)},
                ["exit"] = {"Exit",                  exit,        nil, Vector3.New(-400,-120)},
            }
        end


        Program.Wait(0.01)
        addph:setPosition(menu_pos)
        Camera.FocusAtPoint(menu_pos, Rectangle.New(350, 350, 350, 350))
        if not smooth_camera then Camera.JumpToFocus() end
        Button.Menu(add_buttons, menu_pos, 20)
        Program.Wait(0.01)

    end


end

-- mason/mason_menu.lua

function mason_menu()

    smooth_camera = Character.HasItem("maset_smooth_camera")
    use_machine_names = Character.HasItem("maset_use_machine_names")
    menu_pos = hero:position() + Vector3.New(0,80)
    Camera.FocusAtPoint(menu_pos)
    Game.SetCinematicMode(true, false)

    local function exit()
        Game.SetCinematicMode(false, true)
        Camera.ResetFocus()
        mason_busy = false
    end
    local function finder_menu()
        return
    end

    local buttons = {

        ["obj"] = {"Objects",      type_select, 1, Vector3.New( 200,  70)},
        ["msh"] = {"Entities",     type_select, 2, Vector3.New( 200, -30)},
        ["ent"] = {"GroundMeshes", type_select, 3, Vector3.New( 200,-130)},

        ["man"] = {"All Objs", manifest,      nil, Vector3.New(-350,  80)},
        ["set"] = {"Settings", settings,      nil, Vector3.New(-200,  80)},
        ["tpr"] = {"Teleport", teleporter,    nil, Vector3.New(-200, -80)},
        ["fnd"] = {"Finder",   finder,        nil, Vector3.New(-200,-160)},
        ["cls"] = {"X",        exit,          nil, Vector3.New(-380,-200)},

    }


    Button.Menu(buttons, menu_pos, 30)



end

-- mason/trigger.lua

function trigger()

    while Character.HasItem("maset_trigger_disabled") do
        Program.Wait(2)
    end

    local bubble = ShowTextBubble("trigger", hero:position(), "Mason")
    TextBubble.SetTouchHandlingEnabled(bubble, true)
    Touchable.SetTouchRadius(bubble, 40)

    local offset = Vector3.New(0,45)

    while not TextBubble.IsTextFinished(bubble) do
        Program.Wait(0.008)
        bubble:setPosition(hero:position() + offset)
    end
    HideTextBubble("trigger")

    mason_menu()

end

-- mason/init.lua

function disable_physics(obj)
    PhysicsObject.SetEnabled(obj, false)
end


function load()

    load_busy = true

    load_list = {}
    load_count = 0

    load_area = Game.CurrentLevelName()
    load_code = area_codes[load_area]

    deleted = 0
    for i = 1,999 do
        local n = pad(i)
        if Scene.Find(""..n) ~= nil then
            deleted = deleted +1
            Scene.Find(""..n):destroy()
        end
    end
    while Scene.Find(pad(deleted)) ~= nil do
        Program.Wait(0.002)
    end

    for i = 1,999 do

        local n = pad(i)
        local ivn = load_code..n

        if Character.HasItem(ivn.."t") then

            local t = IV.Get (ivn.."t")
            local x = IV.GetS(ivn.."x")
            local y = IV.GetS(ivn.."y")
            local z = IV.GetS(ivn.."z")
            local r = IV.GetS(ivn.."r")
            local s = IV.GetS(ivn.."s")
            local o = IV.Get (ivn.."o")

            load_list[#load_list +1] = {t,x,y,z,r,s,o}

            load_count = load_count +1

            local type_num = (t % 100)
            local type_list = (t - type_num) / 100
            local new_type = types[type_list][type_num]
            local new_obj = Scene.CreateObject(new_type, ""..n)

            new_obj:setPosition(Vector3.New(x,y,z))
            new_obj:setRotation(r)
            new_obj:setScaling(s)

            if not (o %2 >= 1) then CollisionShape.DisableAll(new_obj) end
            if not (o %4 >= 2) then Thread.New("phys_dis", disable_physics, new_obj) end
            if     (o %8 >= 4) then new_obj:setAlwaysActive(true) end

        end

    end

    load_busy = false

end



load()



while true do

    trigger()

    mason_busy = true
    load_busy = false

    while mason_busy do Program.Wait(0.1) end

end

